# -*- coding: utf-8 -*-
"""flask_ibm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1alZVWibR9CGmblsKpGyc51TIALVLTZR8
"""

!pip install ibm_db==2.0.8a
!pip install flask-ngrok
!pip install flask-bootstrap
!pip install pyngrok==4.1.1
!ngrok authtoken '1tShcLWOqT6sVMKWl6qo37PDosF_5kP7mo4kKjocvFq6k8fWp'
!pip install google-search-results

import ibm_db
conn = ibm_db.connect("DATABASE=bludb;HOSTNAME=ba99a9e6-d59e-4883-8fc0-d6a8c9f7a08f.c1ogj3sd0tgtu0lqde00.databases.appdomain.cloud;PORT=31321;SECURITY=SSL;PROTOCOL=TCPIP;UID=grx93977;PWD=LF5oWQ2sZ1QrjIGg",'','')


from flask import Flask,render_template,jsonify,json,request
from flask_ngrok import run_with_ngrok
from googlesearch import search
from serpapi import GoogleSearch
app = Flask(_name_)
run_with_ngrok(app)

@app.route("/")
def home():
	return "Skill and Job recommender"
@app.route("/add_user")
def adduser():
  name="Ruban"
  age="20"
  skills="devops"
  q="BE"
  query = "INSERT into userr values(?,?,?,?)"
  stmt = ibm_db.prepare(conn, query)
  ibm_db.bind_param(stmt, 1, name)
  ibm_db.bind_param(stmt, 2, age)
  ibm_db.bind_param(stmt, 3, skills)
  ibm_db.bind_param(stmt, 4, q)
  ibm_db.execute(stmt)
  return "Success"
@app.route("/user_list")
def red():
  name=[]
  skills=[]

  query = "SELECT * FROM client "
  stmt = ibm_db.prepare(conn, query)
  ibm_db.execute(stmt)
  dictionary = ibm_db.fetch_assoc(stmt)
  while dictionary!= False:
    name.append(dictionary['NAME'])
    skills.append(dictionary['SKILLS'])
    dictionary = ibm_db.fetch_assoc(stmt)
  return render_template('job_list.html',names=name,skills=skills) 
@app.route("/apply")
def html():
  return render_template('applyjobs.html')  
@app.route("/search")
def search():
  return render_template('jobsearch.html')  
@app.route("/assistant")
def assi():
  return render_template('chatbot.html')  
@app.route("/apply_jobs",methods = ['POST','GET'])
def server():
    id = request.form['id']
    name = request.form['name']
    skills = request.form['skills']
    exp = request.form['exp']
    gender = request.form['gender']
    mail = request.form['email']
    phno = request.form['phno']
    address = request.form['address']
    salary = request.form['salary']
    query = "INSERT into candidate values(?,?,?,?,?,?,?,?,?)"
    stmt = ibm_db.prepare(conn, query)
    ibm_db.bind_param(stmt, 1, id)
    ibm_db.bind_param(stmt, 2, name)
    ibm_db.bind_param(stmt, 3, skills)
    ibm_db.bind_param(stmt, 5, gender)
    ibm_db.bind_param(stmt, 6, mail)
    ibm_db.bind_param(stmt, 7, phno)
    ibm_db.bind_param(stmt, 8, address)
    ibm_db.bind_param(stmt, 4, exp)
    ibm_db.bind_param(stmt, 9, salary)
    ibm_db.execute(stmt)
    return "success";    

@app.route("/api",methods = ['POST','GET'])
def api():
  a=request.form['search']
  search = GoogleSearch({  "engine": "google_jobs","q": a,  "api_key": "0ee36e53d50e67b85fe19c31a2a5f99cc36d067922bacaa7e7e83b4603d5fa81"})
  result = search.get_json()
  r=json.dumps(result)
  r=json.loads(r)
  return render_template('api.html',title1=r["jobs_results"][0]["title"],company1=r["jobs_results"][0]["company_name"],
                        description1=r["jobs_results"][0]["description"],location1=r["jobs_results"][0]["location"],
                        title2=r["jobs_results"][0]["title"],company2=r["jobs_results"][0]["company_name"],
                        description2=r["jobs_results"][0]["description"],location2=r["jobs_results"][0]["location"],
                         title3=r["jobs_results"][0]["title"],company3=r["jobs_results"][0]["company_name"],
                        description3=r["jobs_results"][0]["description"],location3=r["jobs_results"][0]["location"],
                         title4=r["jobs_results"][0]["title"],company4=r["jobs_results"][0]["company_name"],
                        description4=r["jobs_results"][0]["description"],location4=r["jobs_results"][0]["location"]
                         ,
                         title5=r["jobs_results"][0]["title"],company5=r["jobs_results"][0]["company_name"],
                        description5=r["jobs_results"][0]["description"],location5=r["jobs_results"][0]["location"]); 

app.run()

